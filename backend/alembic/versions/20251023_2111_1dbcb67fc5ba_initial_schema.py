"""initial schema

Revision ID: 1dbcb67fc5ba
Revises: 
Create Date: 2025-10-23 21:11:24.186051

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1dbcb67fc5ba'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('git_repositories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('github_id', sa.Integer(), nullable=False),
    sa.Column('owner', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=500), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('default_branch', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_git_repositories_github_id'), 'git_repositories', ['github_id'], unique=True)
    op.create_index(op.f('ix_git_repositories_id'), 'git_repositories', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('github_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('github_access_token', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_github_id'), 'users', ['github_id'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('pull_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('github_id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.UUID(), nullable=False),
    sa.Column('pr_number', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('author', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'CLOSED', 'MERGED', name='prstatusenum'), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['repository_id'], ['git_repositories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pull_requests_github_id'), 'pull_requests', ['github_id'], unique=True)
    op.create_index(op.f('ix_pull_requests_id'), 'pull_requests', ['id'], unique=False)
    op.create_index(op.f('ix_pull_requests_repository_id'), 'pull_requests', ['repository_id'], unique=False)
    op.create_table('workspaces',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workspaces_created_by'), 'workspaces', ['created_by'], unique=False)
    op.create_index(op.f('ix_workspaces_id'), 'workspaces', ['id'], unique=False)
    op.create_table('boards',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('columns', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_boards_columns_gin', 'boards', ['columns'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_boards_id'), 'boards', ['id'], unique=False)
    op.create_index(op.f('ix_boards_workspace_id'), 'boards', ['workspace_id'], unique=False)
    op.create_table('workspace_members',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'MEMBER', name='roleenum'), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'workspace_id'),
    sa.UniqueConstraint('user_id', 'workspace_id', name='uq_workspace_members')
    )
    op.create_index(op.f('ix_workspace_members_user_id'), 'workspace_members', ['user_id'], unique=False)
    op.create_index(op.f('ix_workspace_members_workspace_id'), 'workspace_members', ['workspace_id'], unique=False)
    op.create_table('sprints',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('board_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('goal', sa.Text(), nullable=True),
    sa.Column('capacity_points', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PLANNED', 'ACTIVE', 'COMPLETED', 'CANCELLED', name='sprintstatusenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sprints_board_id'), 'sprints', ['board_id'], unique=False)
    op.create_index(op.f('ix_sprints_id'), 'sprints', ['id'], unique=False)
    op.create_table('cards',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('board_id', sa.UUID(), nullable=False),
    sa.Column('column_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('card_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('priority', sa.Enum('NONE', 'LOW', 'MEDIUM', 'HIGH', 'URGENT', name='priorityenum'), nullable=False),
    sa.Column('story_points', sa.Integer(), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('sprint_id', sa.UUID(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['sprint_id'], ['sprints.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cards_board_id'), 'cards', ['board_id'], unique=False)
    op.create_index('ix_cards_board_position', 'cards', ['board_id', 'position'], unique=False)
    op.create_index('ix_cards_card_metadata_gin', 'cards', ['card_metadata'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_cards_column_id'), 'cards', ['column_id'], unique=False)
    op.create_index(op.f('ix_cards_created_by'), 'cards', ['created_by'], unique=False)
    op.create_index(op.f('ix_cards_id'), 'cards', ['id'], unique=False)
    op.create_table('card_assignees',
    sa.Column('card_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('card_id', 'user_id')
    )
    op.create_index(op.f('ix_card_assignees_card_id'), 'card_assignees', ['card_id'], unique=False)
    op.create_index(op.f('ix_card_assignees_user_id'), 'card_assignees', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_card_assignees_user_id'), table_name='card_assignees')
    op.drop_index(op.f('ix_card_assignees_card_id'), table_name='card_assignees')
    op.drop_table('card_assignees')
    op.drop_index(op.f('ix_cards_id'), table_name='cards')
    op.drop_index(op.f('ix_cards_created_by'), table_name='cards')
    op.drop_index(op.f('ix_cards_column_id'), table_name='cards')
    op.drop_index('ix_cards_card_metadata_gin', table_name='cards', postgresql_using='gin')
    op.drop_index('ix_cards_board_position', table_name='cards')
    op.drop_index(op.f('ix_cards_board_id'), table_name='cards')
    op.drop_table('cards')
    op.drop_index(op.f('ix_sprints_id'), table_name='sprints')
    op.drop_index(op.f('ix_sprints_board_id'), table_name='sprints')
    op.drop_table('sprints')
    op.drop_index(op.f('ix_workspace_members_workspace_id'), table_name='workspace_members')
    op.drop_index(op.f('ix_workspace_members_user_id'), table_name='workspace_members')
    op.drop_table('workspace_members')
    op.drop_index(op.f('ix_boards_workspace_id'), table_name='boards')
    op.drop_index(op.f('ix_boards_id'), table_name='boards')
    op.drop_index('ix_boards_columns_gin', table_name='boards', postgresql_using='gin')
    op.drop_table('boards')
    op.drop_index(op.f('ix_workspaces_id'), table_name='workspaces')
    op.drop_index(op.f('ix_workspaces_created_by'), table_name='workspaces')
    op.drop_table('workspaces')
    op.drop_index(op.f('ix_pull_requests_repository_id'), table_name='pull_requests')
    op.drop_index(op.f('ix_pull_requests_id'), table_name='pull_requests')
    op.drop_index(op.f('ix_pull_requests_github_id'), table_name='pull_requests')
    op.drop_table('pull_requests')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_github_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_git_repositories_id'), table_name='git_repositories')
    op.drop_index(op.f('ix_git_repositories_github_id'), table_name='git_repositories')
    op.drop_table('git_repositories')
    # ### end Alembic commands ###
